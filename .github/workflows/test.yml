name: test

on:
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-22.04

    permissions:
      actions: write
      contents: read

    steps:
      - name: Trigger Integration Tests Workflow
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        id: trigger-workflow
        run: |
          echo "Starten van de integration test workflow in repo Y..."
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $PAT_TOKEN" \
            https://api.github.com/repos/LamersBart/Pridr-IntergrationTest/actions/workflows/137682142/dispatches \
            -d '{"ref":"main"}'

          echo "Wachten op registratie van workflow run..."
          sleep 10

          response=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $PAT_TOKEN" \
            https://api.github.com/repos/LamersBart/Pridr-IntergrationTest/actions/runs?branch=main&per_page=1)

          echo "API Response voor workflow-runs: $response"
          run_id=$(echo "$response" | jq -r '.workflow_runs[0].id')
          if [ -z "$run_id" ] || [ "$run_id" == "null" ]; then
            echo "Fout: Geen geldige workflow-run ID gevonden!"
            exit 1
          fi

          echo "Workflow-run ID is: $run_id"
          echo "run_id=$run_id" >> $GITHUB_ENV

      - name: Controleer geladen run_id
        run: |
          if [ -z "${{ env.run_id }}" ]; then
            echo "Fout: run_id is niet geladen!"
            exit 1
          else
            echo "run_id geladen: ${{ env.run_id }}"
          fi

      - name: Wait for Integration Test Completion
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          run_id: ${{ env.run_id }}
        run: |
          if [ -z "${{ env.run_id }}" ]; then
            echo "Fout: run_id is niet ingesteld!"
            exit 1
          fi

          echo "Controleren van workflow-run met ID: ${{ env.run_id }}..."

          # Functie om met een wachttijd te blijven checken
          check_workflow_status() {
            local attempts=0
            local max_attempts=30
            local delay=10

            while [ $attempts -lt $max_attempts ]; do
              echo "Poging $((attempts + 1)) van $max_attempts om de status op te halen..."

              response=$(curl -s \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: Bearer $PAT_TOKEN" \
                "https://api.github.com/repos/LamersBart/Pridr-IntergrationTest/actions/runs/${{ env.run_id }}")

              # Debug: log de volledige response
              echo "API-response: $response"

              status=$(echo "$response" | jq -r '.status')
              conclusion=$(echo "$response" | jq -r '.conclusion')

              if [ "$status" = "completed" ]; then
                if [ "$conclusion" = "success" ]; then
                  echo "Workflow succesvol voltooid!"
                  return 0
                else
                  echo "Workflow mislukt met conclusie: $conclusion"
                  exit 1
                fi
              fi

              echo "Workflow nog bezig. Wachten $delay seconden..."
              sleep $delay
              attempts=$((attempts + 1))
            done

            echo "Workflow niet voltooid binnen de maximale wachttijd!"
            exit 1
          }

          # Start controle
          check_workflow_status


